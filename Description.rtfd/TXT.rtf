
Description:

Objective - To develop a web portal for movie management system.

The first web service uses database and the second one uses two of the Google's API for its two functionalities. The first web service would ask for movie name and cinema name as input and will retrieve the show timings from the database to give the output as show timings for different movies and cinemas. The second web service would use Google Places API to search for all the cinemas in a particular place which would be given as the input to the web service. For its second functionality, second web service would use Google Distance Matrix API to display the distance and time duration between a location and a cinema. For using Google Places API, we have registered for the Google API key. 

The web portal can be accessed by two types of users - an administrator and a customer. The customer needs to login by providing a username and a password, after that the customer can invoke the web service by submitting the input and can view the result on the portal itself. Administrator can also login by providing username and password. After the authentication, the administrator can add or delete the web service. 

Both the web service and the web portal are developed in Microsoft Visual Studio 2008 in C# language. 

Database has been created in Microsoft SQL Server. The database contains details regarding the movie name, their actors, cinema names, show timings etc. It also contains the usernames of the customer and administrator along with their passwords. 

After the customer is able to login, he/she receives a drop down list where he can select the web service available in UDDI. After the selection of the web service of his choice, he is redirected to a page where he enters the input for the service. On hitting enter key the service is invoked with this input and the output is displayed on the portal. The first web service which customer invokes would take the movie name and cinema name as the input for the different functionalities of the web service and displays the show timings as the output to the customer. The show timings would be retrieved from our backend database. The second web service which customer invokes would take the name of the place for the first functionality and displays the theaters in that area. For the second functionality the input would be origin and the destination place and the output would be the distance and the duration between the two places. 

After the administrator logs in with the valid username and password, he can add/delete web services. While adding a service he provides business name, service name and tModel information at the web portal. After clicking add button, the service dynamically gets published in UDDI and is available for customer to view in his drop down list of services he can invoke. While deleting a web service, the administrator selects the service to be deleted from the list of services available at UDDI. After clicking delete button, the service gets deleted and is no longer available for the customer. 

